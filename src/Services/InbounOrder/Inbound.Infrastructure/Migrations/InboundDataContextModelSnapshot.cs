// <auto-generated />
using System;
using Inbound.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inbound.Infrastructure.Migrations
{
    [DbContext(typeof(InboundDataContext))]
    partial class InboundDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Inbound.Domain.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WarehouseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Inbound.Domain.OrderDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId", "Number")
                        .IsUnique();

                    b.ToTable("OrderDocuments");
                });

            modelBuilder.Entity("Inbound.Domain.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantityPackage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TypePackage")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OrderDocumentId");

                    b.HasIndex("DocumentId", "ProductCode", "TypePackage", "QuantityPackage")
                        .IsUnique();

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Inbound.Domain.OrderDocument", b =>
                {
                    b.HasOne("Inbound.Domain.Order", null)
                        .WithMany("Documents")
                        .HasForeignKey("OrderId")
                        .IsRequired();
                });

            modelBuilder.Entity("Inbound.Domain.OrderItem", b =>
                {
                    b.HasOne("Inbound.Domain.OrderDocument", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderDocumentId");
                });

            modelBuilder.Entity("Inbound.Domain.Order", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("Inbound.Domain.OrderDocument", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
